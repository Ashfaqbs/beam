# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Description:
# Kafka-to-Kafka RAW mirroring using Beam YAML.
# Reads bytes from a source topic and writes bytes to a target topic.
# Minimal pass-through, useful for validating Kafka I/O setup.
# Includes an inline test that mocks Kafka I/O for hermetic CI.

pipeline:
  type: chain
  transforms:
    - type: ReadFromKafka
      name: KafkaSource
      config:
        format: RAW
        topic: "{{ SOURCE_TOPIC | default('i-topic') }}"
        bootstrap_servers: "{{ BOOTSTRAP_SERVERS | default('localhost:9092') }}"
        auto_offset_reset_config: earliest
        consumer_config:
          group.id: beam-mirror-001

    # Map RAW Kafka read to KV expected by WriteToKafka.
    - type: MapToFields
      name: ToKafkaKV
      config:
        language: python
        fields:
          key:
            callable: |
              def k(row):
                try:
                  return row.key
                except AttributeError:
                  return b""
          value:
            callable: |
              def v(row):
                try:
                  # RAW Kafka read exposes bytes under 'payload'
                  return row.payload
                except AttributeError:
                  # Fallback if upstream already produced 'value'
                  return row.value

    - type: WriteToKafka
      name: KafkaSink
      input: ToKafkaKV
      config:
        format: RAW
        topic: "{{ TARGET_TOPIC | default('o-topic') }}"
        bootstrap_servers: "{{ BOOTSTRAP_SERVERS | default('localhost:9092') }}"
        producer_config_updates:
          key.serializer:   org.apache.kafka.common.serialization.ByteArraySerializer
          value.serializer: org.apache.kafka.common.serialization.ByteArraySerializer

options:
  streaming: true

# Inline tests (mock I/O) so CI doesn't require Kafka.
tests:
  - name: Mirrors RAW bytes end-to-end (mocked IO)
    mock_outputs:
      - name: KafkaSource
        elements:
          - payload: !!binary "aGVsbG8="   # "hello"
          - payload: !!binary "YmVhbQ=="   # "beam"
    expected_inputs:
      - name: KafkaSink
        elements:
          - { key: !!binary "", value: !!binary "aGVsbG8=" }
          - { key: !!binary "", value: !!binary "YmVhbQ==" }
