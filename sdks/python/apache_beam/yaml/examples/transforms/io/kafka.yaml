# coding=utf-8
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Description:
# This YAML shows a Kafka âžœ Kafka mirroring pattern along with a simple
# readback/parse path. Tests run without external Kafka because the Beam
# test harness mocks ReadFromKafka and turns WriteTo* into LogForTesting.

pipeline:
  type: chain
  transforms:

    # --- Write path: text -> bytes -> Kafka (mocked to LogForTesting in tests)
    - type: ReadFromText
      name: ReadLines
      config:
        path: "examples/input/kinglear.txt"   # test preprocessor overwrites this

    - type: MapToFields
      name: ToKafkaValue
      config:
        fields:
          value: "encode(element, 'utf-8')"   # produce bytes for Kafka value

    - type: WriteToKafka
      name: WriteKafka
      config:
        topic: "o-topic"
        bootstrap_servers: "localhost:9092"
        format: RAW

    # --- Read path: Kafka bytes -> decode to string -> (mocked sink)
    - type: ReadFromKafka
      name: ReadKafka
      config:
        topic: "i-topic"
        bootstrap_servers: "localhost:9092"
        format: RAW

    - type: MapToFields
      name: Decode
      config:
        fields:
          text: "decode(payload, 'utf-8')"    # test ReadFromKafka yields 'payload' bytes

    - type: WriteToKafka     # will be replaced by LogForTesting during tests
      name: Sink
      config:
        topic: "ignored"
        bootstrap_servers: "localhost:9092"
        format: RAW

# Since the pipeline both writes to and reads from a Kafka topic, we expect
# the first component to log the rows containing the `value` field as bytes,
# and the second component to log the rows with decoded `text`.
# Expected:
#  Row(value=b'Fool\tThou shouldst not have been old till thou hadst')
#  Row(value=b'\tbeen wise.')
#  Row(value=b'KING LEAR\tNothing will come of nothing: speak again.')
#  Row(value=b'\tNever, never, never, never, never!')
#  Row(text='Fool\tThou shouldst not have been old till thou hadst')
#  Row(text='\tbeen wise.')
#  Row(text='KING LEAR\tNothing will come of nothing: speak again.')
#  Row(text='\tNever, never, never, never, never!')
